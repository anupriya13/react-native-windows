name: Generate Release Notes

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: anupriya13/react-native-windows
          fetch-depth: 0
          ref: ${{ github.head_ref != '' && github.head_ref || github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.12

      - name: Install dependencies
        run: pip install requests

      - name: Get latest tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0 || echo "Unreleased")
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Generate release notes file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ steps.get_tag.outputs.tag }}
        run: |
          python .github/scripts/generate_release_notes.py > release_notes.md
          mkdir -p .github/release_notes
          mv release_notes.md .github/release_notes/release_notes.md

      - name: Commit and push release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/release_notes/release_notes.md
          git diff --cached --quiet || git commit -m "Add generated release notes"
          # Push only if on a branch ref (not tags or detached)
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" && -n "${GITHUB_HEAD_REF}" ]]; then
            git push origin HEAD:${GITHUB_HEAD_REF}
          elif [[ "${GITHUB_REF_NAME}" != "" ]]; then
            git push origin HEAD:${GITHUB_REF_NAME}
          else
            echo "Not a branch ref, skipping push."
          fi
