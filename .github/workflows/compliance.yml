name: Upgrade package(s) yarn.lock file

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: "Branch to refresh yarn.lock"
        required: true
        default: main
        type: choice
        options:
          - main
          - 0.80-stable
          - 0.79-stable
          - 0.78-stable
      package_name:
        description: "Specific package to update (optional)"
        required: false
        default: ""
        type: string

jobs:
  refresh-lockfile:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch: ${{ github.event_name == 'schedule' && fromJson('["main","0.80-stable","0.79-stable","0.78-stable"]') || fromJson(format('["{0}"]', github.event.inputs.target_branch)) }}

    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Clone repo using gh CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth setup-git
          gh repo clone "${{ github.repository }}" repo
          cd repo
          git checkout "${{ matrix.branch }}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Update yarn.lock
        working-directory: ./repo
        run: |
          if [[ -n "${{ github.event.inputs.package_name }}" ]]; then
            echo "⬆️ Running yarn upgrade ${{ github.event.inputs.package_name }}..."
            yarn upgrade "${{ github.event.inputs.package_name }}"
          else
            echo "⬆️ Running yarn upgrade (all)..."
            yarn upgrade
          fi

          echo "📦 Running yarn install without lifecycle scripts..."
          yarn install --ignore-scripts

      - name: Commit and push changes
        working-directory: ./repo
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH="chore/yarn-lock-refresh-${{ matrix.branch }}-${{ github.run_id }}"

          if git diff --quiet yarn.lock; then
            echo "🟢 No changes to yarn.lock. Skipping commit and PR."
            echo "NO_CHANGES=true" >> $GITHUB_ENV
            exit 0
          fi

          git checkout -b "$BRANCH"
          git add yarn.lock
          git commit -m "chore: refresh yarn.lock for ${{ matrix.branch }}"
          git push --force --set-upstream "https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git" "$BRANCH"
          echo "NEW_BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.NO_CHANGES != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="chore/yarn-lock-refresh-${{ matrix.branch }}-${{ github.run_id }}"
          PR_TITLE="chore: Refresh yarn.lock for ${{ matrix.branch }}"
          if [[ -n "${{ github.event.inputs.package_name }}" ]]; then
            PR_TITLE="$PR_TITLE (package: ${{ github.event.inputs.package_name }})"
          else
            PR_TITLE="$PR_TITLE (all packages)"
          fi

          PR_BODY=$(cat <<EOF
          ### Type of Change
          - Chore
          
          ### Why
          Refreshes \`yarn.lock\` by upgrading dependencies.
          
          ### What Changed
          - Ran \`yarn up${{ github.event.inputs.package_name && format(' {0}', github.event.inputs.package_name) }}\`
          - Ran \`yarn install --ignore-scripts\` to update lockfile safely.
          
          ## Changelog
          Should this change be included in the release notes: no
          EOF
                    )

          gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --head "$BRANCH" \
            --base "${{ matrix.branch }}" \
            --repo "${{ github.repository }}"
